indexConntroller.js
// 학생 업데이트(사진2)
exports.updateStudent = async function (req, res) {
  const { studentName, marjor, birth, address } = req.body;
  const { studentIdx } = req.params;

  if (studentName && typeof studentName !== "string") {
    return res.send({
      isSuccess : false,
      code: 400, // 요청 실패 시 400번대 코드
      message: "값을 정확히 입력해주세요.",
    });
  }
  if (marjor && typeof marjor !== "string") {
    return res.send({
      isSuccess : false,
      code: 400, // 요청 실패 시 400번대 코드
      message: "값을 정확히 입력해주세요.",
    });
  }
  if (address && typeof address !== "string") {
    return res.send({
      isSuccess : false,
      code: 400, // 요청 실패 시 400번대 코드
      message: "값을 정확히 입력해주세요.",
    });
  }
  // birth : YYYY-MM-DD 형식 검사
  var regex = RegExp(/^\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);
  if (birth && !regex.test(birth)) {
    return res.send({
      isSuccess : false,
      code: 400, // 요청 실패 시 400번대 코드
      message: "날짜 형식을 확인해주세요.",
    });
  }

 return;

   try {
    const connection = await pool.getConnection(async (conn) => conn);
    try {
      const isValidStudentIdx = await indexDao.isValidStudentIdx(studentIdx);
      if (!isValidStudentIdx) {
        return res.send({
          isSuccess: false,
          code: 410, // 요청 실패시 400번대 코드
          message: "유효한 학생 인덱스가 아닙니다.",
        });
      }

  const [rows] = await indexDao.updateStudents(studentIdx, connection, studentName, marjor, birth, address);


  try {
    const connection = await pool.getConnection(async (conn) => conn);
    try {
      const [rows] = await indexDao.updateStudents(connection, studentName, marjor, birth, address);

      return res.send({
        isSuccess: true,
        code: 200, // 요청 실패시 400번대 코드
        message: "학생 수정 성공",
      });
    } catch (err) {
      logger.error(`readStudents Query error\n: ${JSON.stringify(err)}`);
      return false;
    } finally {
      connection.release();
    }
  } catch (err) {
    logger.error(`readStudents DB Connection error\n: ${JSON.stringify(err)}`);
    return false;
  }
}